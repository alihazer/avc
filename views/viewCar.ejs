<div class="container">
    
    <div class="card">
        <div>
            <a href="/cars" class="back-arrow1"><i class="fa-solid fa-arrow-left"></i></a>
        </div>
        <div class="card-header">
            Car Details:
        </div>
        <div class="card-body">
            <p>Type: <%= car.type %></p>
            <p>Total Cases: <%= car.totalCases %></p>

            <% if (car.materials.length > 0) { %>
                <h3>Materials:</h3>
                <!-- Table -->
                <table class="table">
                    <thead>
                        <tr>
                            <th>Material</th>
                            <th>Quantity</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% car.materials.forEach(material => { %>
                            <tr>
                                <td><%= material._id.name %></td>
                                <td><%= material.quantity %></td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            <% } else { %>
                <p>No materials found</p>
            <% } %>
        </div>

        <div class="card">
            <div class="card-header">
                <h1>Car Costs Statistics</h1>
            </div>
            <div class="card-body">
                <div class="select">
                    <label for="yearSelect">Select Year:</label>
                    <select id="yearSelect">
                        <% const currentYear = new Date().getFullYear() %>
                        <% for (let year = currentYear; year >= 2024; year--) { %>
                            <option value="<%= year %>"><%= year %></option>
                        <% } %>
                    </select>
                </div>
        
                <div class="total">
                        <h2>Total Cost: <span id="totalCost"></span></h2>
                </div>
        
                <div id="costChart"></div>
            </div>
        </div>

        <div class="card-body">
            <% if (logs.length > 0) { %>
                <% console.log(logs) %>
                <h3>Logs:</h3>
                <!-- Table -->
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Action</th>
                                <th>User</th>
                                <th>Time</th>
                                <th>Materials</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% logs.forEach(log => { %>
                                <tr>
                                    <% if(log.action == 'Added'){ %>
                                    <td style="background-color: rgba(17, 190, 17, 0.47);"><%= log.action %></td>
                                    <% }else if(log.action == 'Used'){ %>
                                    <td style="background-color: rgba(195, 8, 8, 0.491);"><%= log.action %></td>
                                    <% } else{%>
                                    <td><%= log.action %></td>
                                    <% } %>
                                    <td><%= log.user.username %></td>
                                    <td>
                                        <!-- Humanized created at -->
                                        <%= moment(log.createdAt).fromNow() %>
                                    </td>
                                    <td>
                                        <% log.materials_added.forEach(material => { %>
                                            <p><%= material._id.name %> - <%= material.quantity %></p>
                                        <% }) %>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
                <!-- View all btn-->
                 <br>
                <a href="/logs/<%= car._id %>" class="btn btn-primary">View all Logs</a>
            <% } else { %>
                <p>No logs found</p>
            <% } %>
        </div>
    </div>
    
</div>
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script>
    let costChart = null;

    async function fetchCarCostStats(carId, year) {
        const response = await fetch(`/cars/${carId}/costs/${year}`);
        console.log(response);
        return response.json();
    }

    function formatCarCostData(data) {
        const categories = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

        return data.map(item => {
            const seriesData = new Array(12).fill(0);
            item.data.forEach(d => {
                seriesData[d.month - 1] = d.totalCost;
            });

            // Map the cause to Arabic names
            let causeName;
            if (item._id === 'maintenance') {
                causeName = 'صيانة';
            } else if (item._id === 'benzine') {
                causeName = 'بنزين';
            } else if (item._id === 'change') {
                causeName = 'غيار زيت';
            } else {
                causeName = item._id;  // Fallback to original name if not mapped
            }

            return {
                name: causeName,  // Use the Arabic name
                data: seriesData
            };
        });
    }

    function renderCarCostChart(data) {
        const options = {
            series: formatCarCostData(data),
            chart: {
                height: 350,
                type: 'area'
            },
            dataLabels: {
                enabled: false
            },
            stroke: {
                curve: 'smooth'
            },
            xaxis: {
                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
            },
            tooltip: {
                x: {
                    format: 'MMM'
                }
            },
            legend: {
                position: 'bottom',
                horizontalAlign: 'center',
                floating: false,
                offsetY: 0
            }
        };

        if (costChart) {
            costChart.destroy();  // Destroy the existing chart instance
        }

        costChart = new ApexCharts(document.querySelector("#costChart"), options);
        costChart.render();
    }

    document.getElementById('yearSelect').addEventListener('change', async function () {
        const year = this.value;
        const carId = '<%= car._id %>'; // Assuming you pass carId from your backend

        try {
            const response = await fetchCarCostStats(carId, year);
            const data = response.costs;
            const totalCost = response.totalCost;
            document.getElementById('totalCost').innerText = totalCost + ' $';
            renderCarCostChart(data);
        } catch (error) {
            console.error('Error fetching car cost stats:', error);
        }
    });

    // Load the current year's data on page load
    (async function() {
        const currentYear = new Date().getFullYear();
        const carId = '<%= car._id %>'; // Assuming you pass carId from your backend

        document.getElementById('yearSelect').value = currentYear;
        try {
            const response = await fetchCarCostStats(carId, currentYear);
            const data = response.costs;
            const totalCost = response.totalCost;
            document.getElementById('totalCost').innerText = totalCost + ' $';

            renderCarCostChart(data);
        } catch (error) {
            console.error('Error fetching car cost stats:', error);
        }
    })();
</script>
