<section>
    <h1>test</h1>
    <button onclick="generatePDF(`<%=id%>`)">Generate Emergency PDF</button>
</section>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script>

    
    
    async function fetchData(id) {
        const response = await fetch(`/triage/get/${id}`);
        console.log(response);
        const result = await response.json();
            if (result.status) {
                return result.triage;
            } else {
                throw new Error('Failed to fetch triage data');
            }
    }

    

    async function generatePDF(id) {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();
            const fontBase64 = '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';
            console.log(fontBase64);
            const arabicFontBase64 = fontBase64;

            try {
                const data = await fetchData(id);
                console.log(data);
                const caseType = data.case_type;
                // Common fields
                doc.addFileToVFS('NotoSansArabic.woff', arabicFontBase64); // or 'NotoSansArabic.woff2'
                doc.addFont('NotoSansArabic.woff', 'NotoSansArabic', 'normal'); // or 'NotoSansArabic.woff2'
                doc.setFont('NotoSansArabic');
                doc.text(`${capitalize(caseType)} Triage`, 10, 10);
                doc.text(`الوقت: ${data.time}`, 10, 20);
                doc.text(`نوع الحالة: ${data.case_type}`, 10, 30);
                doc.text(`رقم الاسعاف: ${data.car_nb}`, 10, 40);
                doc.text(`From: ${data.from}`, 10, 50);
                doc.text(`To: ${data.to}`, 10, 60);
                doc.text(`اسم الشوفير: ${data.driverName}`, 10, 70);
                doc.text(`اسماء المسعفين: ${data.paramedics.join(', ')}`, 10, 80);
                doc.text(`اسم الحالة: ${data.patient_name}`, 10, 90);
                
                // Case-specific fields
                if (caseType === 'emergency' || caseType === 'accident') {
                    doc.text(`AVPU: ${data.avpu}`, 10, 100);
                    doc.text(`PPTE: ${data.ppte}`, 10, 110);
                }
                if (caseType === 'accident') {
                    doc.text('DCAP_BTLS:', 10, 120);
                    const dcapBtls = data.dcap_btls;
                    const dcapBtlsText = Object.keys(dcapBtls).map(key => `${key.toUpperCase()}: ${dcapBtls[key] ? '✔' : ''}`).join('\n');
                    doc.text(dcapBtlsText, 20, 130);
                }
                if (caseType !== 'death') {
                    doc.text(`MOI: ${data.moi}`, 10, 140);
                    const vitals = data.vitals;
                    doc.text(`Heart Rate: ${vitals.heartRate}`, 10, 150);
                    doc.text(`Blood Pressure: ${vitals.bloodPressure}`, 10, 160);
                    doc.text(`SpO2: ${vitals.spo2}`, 10, 170);
                    doc.text(`Temperature: ${vitals.temperature}`, 10, 180);
                }
                if (caseType === 'emergency' || caseType === 'medical' || caseType === 'accident') {
                    doc.text(`امراض مزمنة: ${data.chronicDiseases}`, 10, 190);
                    doc.text(`عمليات سابقة: ${data.previousSurgeries}`, 10, 200);
                }
                doc.text(`الادوات المستخدمة: ${data.toolsUsed}`, 10, 210);
                doc.text(`الملاحظات: ${data.notes}`, 10, 220);
                doc.text(`رقم الموافقة: ${data.approvalNumber}`, 10, 230);

                doc.save(`${caseType}_Triage.pdf`);
            } catch (error) {
                console.error(error);
            }
    }

        function capitalize(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
        }
</script>